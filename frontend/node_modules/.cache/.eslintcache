[{"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\index.js":"1","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\App.js":"2","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Register.js":"3","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\CreateUser.js":"4","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Footer.js":"5","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Navbar.js":"6","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Home.js":"7","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Login.js":"8","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\ResetPassword.js":"9","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\ViewUser.js":"10","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\ViewProduk.js":"11","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\CreateProduk.js":"12","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\ListProduk.js":"13","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\CreateRoles.js":"14","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\ListRoles.js":"15","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\ViewRoles.js":"16","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\CreateCustomer.js":"17","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\ListCustomer.js":"18","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\ViewCustomer.js":"19","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\ViewTransaksi.js":"20","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\ListTransaksi.js":"21","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\CreateTransaksi.js":"22"},{"size":391,"mtime":1653043090696,"results":"23","hashOfConfig":"24"},{"size":5691,"mtime":1653129803213,"results":"25","hashOfConfig":"24"},{"size":5144,"mtime":1653043090695,"results":"26","hashOfConfig":"24"},{"size":6430,"mtime":1653051313398,"results":"27","hashOfConfig":"24"},{"size":296,"mtime":1653043090693,"results":"28","hashOfConfig":"24"},{"size":3478,"mtime":1653133646206,"results":"29","hashOfConfig":"24"},{"size":6869,"mtime":1653125848308,"results":"30","hashOfConfig":"24"},{"size":2709,"mtime":1653043090694,"results":"31","hashOfConfig":"24"},{"size":3275,"mtime":1653043090695,"results":"32","hashOfConfig":"24"},{"size":3739,"mtime":1653051357986,"results":"33","hashOfConfig":"24"},{"size":3381,"mtime":1653061346509,"results":"34","hashOfConfig":"24"},{"size":4638,"mtime":1653061039679,"results":"35","hashOfConfig":"24"},{"size":4912,"mtime":1653115078420,"results":"36","hashOfConfig":"24"},{"size":4023,"mtime":1653115078420,"results":"37","hashOfConfig":"24"},{"size":4784,"mtime":1653060615011,"results":"38","hashOfConfig":"24"},{"size":3149,"mtime":1653061468052,"results":"39","hashOfConfig":"24"},{"size":4637,"mtime":1653057288238,"results":"40","hashOfConfig":"24"},{"size":4780,"mtime":1653126231390,"results":"41","hashOfConfig":"24"},{"size":3248,"mtime":1653056881421,"results":"42","hashOfConfig":"24"},{"size":4133,"mtime":1653133827769,"results":"43","hashOfConfig":"24"},{"size":5181,"mtime":1653133733762,"results":"44","hashOfConfig":"24"},{"size":7232,"mtime":1653134807535,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"jmudjy",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"49"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\index.js",[],[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\App.js",[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Register.js",[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\CreateUser.js",["120"],["121"],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst CreateUser = () => {\r\n  let params = useParams();\r\n  const [id, setId] = useState(params.id);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useNavigate();\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const axiosJwt = axios.create();\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [roleToken, setRoleToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getRoles();\r\n    cekId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      // setName(decode.name);\r\n      // setUserId(decode.userId);\r\n      setRoleToken(decode.role);\r\n      setExpired(decode.exp);\r\n      if (decode.role !== \"admin\") {\r\n        if (id != decode.userId) {\r\n          history(\"/home\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        // setName(decode.name);\r\n        // setUserId(decode.userId);\r\n        setRoleToken(decode.role);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const cekId = async () => {\r\n    if (id === \"_add\") {\r\n      return;\r\n    } else {\r\n      const res = await axiosJwt.get(\"http://localhost:5000/users/\" + id, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      let User = res.data;\r\n      setId(User.id);\r\n      setName(User.name);\r\n      setEmail(User.email);\r\n      setPassword(User.password);\r\n      setRole(User.role);\r\n    }\r\n  };\r\n\r\n  const getRoles = async () => {\r\n    const response = await axios.get(\"http://localhost:5000/roles\");\r\n    setRoles(response.data);\r\n    setRole(response.data[0].role);\r\n  };\r\n\r\n  const saveOrUpdateUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (id === \"_add\") {\r\n      let User = {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role: role,\r\n      };\r\n      await axios\r\n        .post(\"http://localhost:5000/adduser\", User, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          swal(res.data.msg);\r\n          history(\"/home\");\r\n        });\r\n    } else {\r\n      let User2 = {\r\n        name: name,\r\n        email: email,\r\n        role: role,\r\n      };\r\n      await axios\r\n        .put(\"http://localhost:5000/users/\" + id, User2, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          swal(res.data.msg);\r\n          history(\"/home\");\r\n        });\r\n    }\r\n  };\r\n\r\n  function cancel() {\r\n    history(\"/home\");\r\n  }\r\n\r\n  function getTitle() {\r\n    if (id === \"_add\") {\r\n      return <h3 className=\"text-center\">Add User</h3>;\r\n    } else {\r\n      return <h3 className=\"text-center\">Update User</h3>;\r\n    }\r\n  }\r\n\r\n  function addPassword() {\r\n    if (id === \"_add\") {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            placeholder=\"*****\"\r\n            name=\"alamat\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function editRole() {\r\n    if (roleToken === \"admin\") {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>Select Roles</label>\r\n          <div className=\"controls\">\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"roles\"\r\n              id=\"roles\"\r\n              onChange={(e) => setRole(e.target.value)}\r\n              value={role}\r\n            >\r\n              {roles.map((role) => (\r\n                <option key={role.id}>{role.role}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n            <br></br>\r\n\r\n            {getTitle()}\r\n\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label>Name </label>\r\n                  <input\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                {editRole()}\r\n                {addPassword()}\r\n                <br></br>\r\n                <button className=\"btn btn-success\" onClick={saveOrUpdateUser}>\r\n                  Simpan\r\n                </button>\r\n                <button className=\"btn btn-danger ml-4\" onClick={cancel}>\r\n                  Batal\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Footer.js",[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Navbar.js",[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Home.js",["122","123"],["124"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Home = () => {\r\n  let params = useParams();\r\n  const [id, setId] = useState(params.id);\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const axiosJwt = axios.create();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      setName(decode.name);\r\n      setRole(decode.role);\r\n      setExpired(decode.exp);\r\n      if (decode.role !== \"admin\") {\r\n        if (id != decode.userId) {\r\n          history(\"/produk\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        setName(decode.name);\r\n        setRole(decode.role);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getUsers = async () => {\r\n    const response = await axiosJwt.get(\"http://localhost:5000/users\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  function addUser() {\r\n    history(\"/add-User/_add\");\r\n  }\r\n\r\n  function editUser(id) {\r\n    history(`/add-User/${id}`);\r\n  }\r\n\r\n  function viewUser(id) {\r\n    history(`/view-User/${id}`);\r\n  }\r\n\r\n  const deleteUser = async (id) => {\r\n    var proceed = window.confirm(\"Apakah anda yakin hapus?\");\r\n    if (proceed) {\r\n      const response = await axiosJwt.delete(\r\n        \"http://localhost:5000/users/\" + id,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      swal(response.data.msg);\r\n      const NewUsers = users.filter((user) => user.id !== id);\r\n      setUsers(NewUsers);\r\n    } else {\r\n      // swal('batal hapus');\r\n    }\r\n  };\r\n\r\n  function gantiPassword(id) {\r\n    history(`/gantiPassword/${id}`);\r\n  }\r\n\r\n  function MyComponent() {\r\n    if (role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <br></br>\r\n\r\n          <h3>Data User</h3>\r\n          <button onClick={addUser} className=\"button is-info\">\r\n            Add User\r\n          </button>\r\n          <br></br>\r\n\r\n          <table className=\"table is-bordered is-fullwidth\">\r\n            <thead className=\"has-background-black\">\r\n              <tr>\r\n                <th className=\"has-text-light has-text-centered\"> No </th>\r\n                <th className=\"has-text-light has-text-centered\"> Nama </th>\r\n                <th className=\"has-text-light has-text-centered\"> Email </th>\r\n                <th className=\"has-text-light has-text-centered\"> Role </th>\r\n\r\n                <th className=\"has-text-light has-text-centered\"> Action </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user, index) => (\r\n                <tr key={user.id}>\r\n                  <td className=\"has-text-centered\"> {index + 1} </td>\r\n                  <td className=\"has-text-centered\"> {user.name} </td>\r\n                  <td className=\"has-text-centered\"> {user.email} </td>\r\n                  <td className=\"has-text-centered\"> {user.role} </td>\r\n\r\n                  <td className=\"has-text-centered\">\r\n                    <button\r\n                      onClick={() => editUser(user.id)}\r\n                      className=\"button is-info ml-4\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => deleteUser(user.id)}\r\n                      className=\"button is-danger ml-4\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      onClick={() => viewUser(user.id)}\r\n                      className=\"button is-primary ml-4\"\r\n                    >\r\n                      View\r\n                    </button>\r\n                    <button\r\n                      onClick={() => gantiPassword(user.id)}\r\n                      className=\"button is-warning ml-4\"\r\n                    >\r\n                      Ganti Password\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3>Aplikasi React Js</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3 className=\"has-text-centered\">Selamat datang {name} di Bootcamp</h3>\r\n      <h5 className=\"has-text-centered\">Anda login sebagai {role}</h5>\r\n      <hr></hr>\r\n      {MyComponent()}\r\n\r\n      {/* <table className='table is-striped is-fullwidth'>\r\n        <thead>\r\n          <tr>\r\n            <th>No</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={user.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                <button onClick={() => editUser(user.id)}\r\n                  className='button is-default'>Edit</button>\r\n                <button style={{ marginleft: \"10px\" }}\r\n                  onClick={() => deleteUser(user.id)}\r\n                  className='button is-danger'>Delete</button>\r\n                <button style={{ marginleft: \"10px\" }}\r\n                  onClick={() => viewUser(user.id)}\r\n                  className='button is-success'>View</button>\r\n                <button style={{ marginleft: \"10px\" }}\r\n                  onClick={() => gantiPassword(user.id)}\r\n                  className='button is-warning'>Ganti Password</button>\r\n\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Login.js",[],[],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\ResetPassword.js",["125"],["126"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport swal from 'sweetalert';\r\n\r\nconst ResetPassword = () => {\r\n    let params = useParams();\r\n    const [id, setId] = useState(params.id);\r\n    const [password, setPassword] = useState('');\r\n    const history = useNavigate();\r\n    const [token, setToken] = useState('');\r\n    const [expired, setExpired] = useState('');\r\n    const axiosJwt = axios.create();\r\n\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/token');\r\n            setToken(response.data.accessToken);\r\n            const decode = jwt_decode(response.data.accessToken);\r\n            // setName(decode.name);\r\n            setExpired(decode.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                history('/');\r\n            }\r\n        }\r\n    }\r\n\r\n    axiosJwt.interceptors.request.use(async (config) => {\r\n        const currentDate = new Date();\r\n        if (expired * 1000 < currentDate.getTime()) {\r\n            const response = await axios.get('http://localhost:5000/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decode = jwt_decode(response.data.accessToken);\r\n            // setName(decode.name);\r\n            setExpired(decode.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n    );\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const updatePassword = async (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            password: password\r\n        }\r\n        await axios.put('http://localhost:5000/resetpassword/' + id, data,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(res => {\r\n                swal(res.data.msg);\r\n                history('/home');\r\n            });\r\n\r\n    }\r\n\r\n    function cancel() {\r\n        history('/home');\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h1>Ganti Password User id {id}</h1>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label>Password Baru</label>\r\n                            <input placeholder=\"***\" name=\"password\" type='password' className=\"form-control\"\r\n                                value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                        </div>\r\n                        <br></br>\r\n                        <button className=\"btn btn-success\" onClick={updatePassword} >Simpan</button>\r\n                        <button className=\"btn btn-danger\" onClick={cancel}>Batal</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\ViewUser.js",["127"],["128"],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ViewUser = () => {\r\n  let params = useParams();\r\n  const [id, setId] = useState(params.id);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useNavigate();\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const axiosJwt = axios.create();\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      //   setName(decode.name);\r\n      setExpired(decode.exp);\r\n      if (decode.role !== \"admin\") {\r\n        if (id != decode.userId) {\r\n          history(\"/home\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        setName(decode.name);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    cekId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const cekId = async () => {\r\n    const res = await axiosJwt.get(\"http://localhost:5000/users/\" + id, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    let User = res.data;\r\n    setId(User.id);\r\n    setName(User.name);\r\n    setEmail(User.email);\r\n    setPassword(User.password);\r\n    setRole(User.role);\r\n  };\r\n\r\n  function cancel() {\r\n    history(\"/home\");\r\n  }\r\n\r\n  function getTitle() {\r\n    return <h3 className=\"text-center\">View User</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n            <br></br>\r\n\r\n            {getTitle()}\r\n\r\n            <br></br>\r\n\r\n            <div className=\"columns is-flex is-centered\">\r\n              <figure className=\"image is-128x128\">\r\n                <img\r\n                  src=\"https://www.pngall.com/wp-content/uploads/5/User-Profile-PNG-High-Quality-Image.png\"\r\n                  alt=\"logo\"\r\n                />\r\n              </figure>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label>Name : {name}</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Email : {email}</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Password : {password}</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Role : {role}</label>\r\n                </div>\r\n                <br></br>\r\n                <button className=\"btn btn-danger\" onClick={cancel}>\r\n                  Batal\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewUser;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\ViewProduk.js",[],["129"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\CreateProduk.js",[],["130"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Produk\\ListProduk.js",["131","132"],["133"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst ListProduk = () => {\r\n  // const [name, setName] = useState('');\r\n  const [role, setRole] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const [produk, setProduk] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const axiosJwt = axios.create();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getProduks();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      // setName(decode.name);\r\n      setRole(decode.role);\r\n      setExpired(decode.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        // setName(decode.name);\r\n        setRole(decode.role);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getProduks = async () => {\r\n    const response = await axiosJwt.get(\"http://localhost:5000/produk\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setProduk(response.data);\r\n  };\r\n\r\n  function addProduk() {\r\n    history(\"/add-Produk/_add\");\r\n  }\r\n\r\n  function editProduk(id) {\r\n    history(`/add-Produk/${id}`);\r\n  }\r\n\r\n  function viewProduk(id) {\r\n    history(`/view-Produk/${id}`);\r\n  }\r\n\r\n  const deleteProduk = async (id) => {\r\n    var proceed = window.confirm(\"Apakah anda yakin hapus?\");\r\n    if (proceed) {\r\n      const response = await axiosJwt.delete(\r\n        \"http://localhost:5000/Produk/\" + id,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      swal(response.data.msg);\r\n      const NewProduks = produk.filter((Produk) => Produk.id !== id);\r\n      setProduk(NewProduks);\r\n    } else {\r\n      // swal('batal hapus');\r\n    }\r\n  };\r\n\r\n  function numberWithCommas(harga) {\r\n    return harga.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  }\r\n\r\n  function MyComponent() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n\r\n        <h3>Data Produk</h3>\r\n        <button onClick={addProduk} className=\"button is-info\">\r\n          Add Produk\r\n        </button>\r\n        <br></br>\r\n\r\n        <table className=\"table is-bordered is-fullwidth\">\r\n          <thead className=\"has-background-black\">\r\n            <tr>\r\n              <th className=\"has-text-light has-text-centered\"> No </th>\r\n              <th className=\"has-text-light has-text-centered\"> Nama </th>\r\n              <th className=\"has-text-light has-text-centered\"> Harga </th>\r\n\r\n              <th className=\"has-text-light has-text-centered\"> Action </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {produk.map((user, index) => (\r\n              <tr key={user.id}>\r\n                <td className=\"has-text-centered\"> {index + 1} </td>\r\n                <td className=\"has-text-centered\"> {user.nama} </td>\r\n                <td className=\"has-text-centered \">\r\n                  Rp. {numberWithCommas(user.harga)}\r\n                </td>\r\n\r\n                <td className=\"has-text-centered\">\r\n                  <button\r\n                    onClick={() => editProduk(user.id)}\r\n                    className=\"button is-info ml-4\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteProduk(user.id)}\r\n                    className=\"button is-danger ml-4\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    onClick={() => viewProduk(user.id)}\r\n                    className=\"button is-primary ml-4\"\r\n                  >\r\n                    View\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Produk</h1>\r\n      <hr></hr>\r\n      {MyComponent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListProduk;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\CreateRoles.js",[],["134"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\ListRoles.js",["135"],["136"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst ListRoles = () => {\r\n  // const [name, setName] = useState('');\r\n  const [role, setRole] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const [roles, setRoles] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const axiosJwt = axios.create();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getRoles();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      // setName(decode.name);\r\n      setRole(decode.role);\r\n      setExpired(decode.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        // setName(decode.name);\r\n        setRole(decode.role);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getRoles = async () => {\r\n    const response = await axiosJwt.get(\"http://localhost:5000/Roles\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setRoles(response.data);\r\n  };\r\n\r\n  function addRoles() {\r\n    history(\"/add-Roles/_add\");\r\n  }\r\n\r\n  function editRoles(id) {\r\n    history(`/add-Roles/${id}`);\r\n  }\r\n\r\n  function viewRoles(id) {\r\n    history(`/view-Roles/${id}`);\r\n  }\r\n\r\n  const deleteRoles = async (id) => {\r\n    var proceed = window.confirm(\"Apakah anda yakin hapus?\");\r\n    if (proceed) {\r\n      const response = await axiosJwt.delete(\r\n        \"http://localhost:5000/Roles/\" + id,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      swal(response.data.msg);\r\n      const NewRoles = roles.filter((Role) => Role.id !== id);\r\n      setRoles(NewRoles);\r\n    } else {\r\n      // swal('batal hapus');\r\n    }\r\n  };\r\n\r\n  function MyComponent() {\r\n    if (role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <br></br>\r\n\r\n          <h3>Data Roles</h3>\r\n          <button onClick={addRoles} className=\"button is-info\">\r\n            Add Role\r\n          </button>\r\n          <br></br>\r\n\r\n          <table className=\"table is-bordered is-fullwidth\">\r\n            <thead className=\"has-background-black\">\r\n              <tr>\r\n                <th className=\"has-text-light has-text-centered\"> No </th>\r\n                <th className=\"has-text-light has-text-centered\"> Role </th>\r\n\r\n                <th className=\"has-text-light has-text-centered\"> Action </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {roles.map((user, index) => (\r\n                <tr key={user.id}>\r\n                  <td className=\"has-text-centered\"> {index + 1} </td>\r\n                  <td className=\"has-text-centered\"> {user.role} </td>\r\n\r\n                  <td className=\"has-text-centered\">\r\n                    <button\r\n                      onClick={() => editRoles(user.id)}\r\n                      className=\"button is-info ml-4\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => deleteRoles(user.id)}\r\n                      className=\"button is-danger ml-4\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      onClick={() => viewRoles(user.id)}\r\n                      className=\"button is-primary ml-4\"\r\n                    >\r\n                      View\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3>Aplikasi React Js</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Roles</h1>\r\n      <hr></hr>\r\n      {MyComponent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListRoles;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Roles\\ViewRoles.js",[],["137"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\CreateCustomer.js",[],["138"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\ListCustomer.js",["139"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ListCustomer = () => {\r\n  const [role, setRole] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expired, setExpired] = useState(\"\");\r\n  const [customer, setCustomer] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const axiosJwt = axios.create();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getCustomer();\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decode = jwt_decode(response.data.accessToken);\r\n      setRole(decode.role);\r\n      setExpired(decode.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  axiosJwt.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      if (expired * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decode = jwt_decode(response.data.accessToken);\r\n        setRole(decode.role);\r\n        setExpired(decode.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getCustomer = async () => {\r\n    const response = await axiosJwt.get(\"http://localhost:5000/customer\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setCustomer(response.data);\r\n  };\r\n\r\n  function addCustomer() {\r\n    history(\"/add-Customer/_add\");\r\n  }\r\n\r\n  function editCustomer(id) {\r\n    history(`/add-Customer/${id}`);\r\n  }\r\n\r\n  function viewCustomer(id) {\r\n    history(`/view-Customer/${id}`);\r\n  }\r\n\r\n  const deleteCustomer = async (id) => {\r\n    var proceed = window.confirm(\"Apakah anda yakin hapus?\");\r\n    if (proceed) {\r\n      const response = await axiosJwt.delete(\r\n        \"http://localhost:5000/customer/\" + id,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      swal(response.data.msg);\r\n      const NewCustomer = customer.filter((customer) => customer.id !== id);\r\n      setCustomer(NewCustomer);\r\n    } else {\r\n      // swal('batal hapus');\r\n    }\r\n  };\r\n\r\n  function MyComponent() {\r\n    if (role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <br></br>\r\n\r\n          <h3>Data Customer</h3>\r\n          <button onClick={addCustomer} className=\"button is-info\">\r\n            Add Customer\r\n          </button>\r\n          <br></br>\r\n\r\n          <table className=\"table is-bordered is-fullwidth\">\r\n            <thead className=\"has-background-black\">\r\n              <tr>\r\n                <th className=\"has-text-light has-text-centered\"> No </th>\r\n                <th className=\"has-text-light has-text-centered\"> Nama </th>\r\n                <th className=\"has-text-light has-text-centered\"> Email </th>\r\n\r\n                <th className=\"has-text-light has-text-centered\"> Action </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customer.map((user, index) => (\r\n                <tr key={user.id}>\r\n                  <td className=\"has-text-centered\"> {index + 1} </td>\r\n                  <td className=\"has-text-centered\"> {user.name} </td>\r\n                  <td className=\"has-text-centered\"> {user.email} </td>\r\n\r\n                  <td className=\"has-text-centered\">\r\n                    <button\r\n                      onClick={() => editCustomer(user.id)}\r\n                      className=\"button is-info ml-4\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => deleteCustomer(user.id)}\r\n                      className=\"button is-danger ml-4\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      onClick={() => viewCustomer(user.id)}\r\n                      className=\"button is-primary ml-4\"\r\n                    >\r\n                      View\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3>Aplikasi React Js</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <hr></hr>\r\n      {MyComponent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCustomer;\r\n","D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\customer\\ViewCustomer.js",[],["140"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\ViewTransaksi.js",["141"],["142"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\ListTransaksi.js",["143","144","145"],["146"],"D:\\Naufal Nur Ihsan\\AGIT\\Training\\backup\\Tugas Kelompok 2\\JwtKelompok2\\frontend\\src\\components\\Transaksi\\CreateTransaksi.js",["147"],["148"],{"ruleId":"149","severity":1,"message":"150","line":38,"column":16,"nodeType":"151","messageId":"152","endLine":38,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":26,"column":6,"nodeType":"155","endLine":26,"endColumn":8,"suggestions":"156","suppressions":"157"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":14,"nodeType":"160","messageId":"161","endLine":9,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":34,"column":16,"nodeType":"151","messageId":"152","endLine":34,"endColumn":18},{"ruleId":"153","severity":1,"message":"162","line":23,"column":6,"nodeType":"155","endLine":23,"endColumn":8,"suggestions":"163","suppressions":"164"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":16,"nodeType":"160","messageId":"161","endLine":9,"endColumn":21},{"ruleId":"153","severity":1,"message":"165","line":49,"column":8,"nodeType":"155","endLine":49,"endColumn":10,"suggestions":"166","suppressions":"167"},{"ruleId":"149","severity":1,"message":"150","line":26,"column":16,"nodeType":"151","messageId":"152","endLine":26,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":59,"column":6,"nodeType":"155","endLine":59,"endColumn":8,"suggestions":"168","suppressions":"169"},{"ruleId":"153","severity":1,"message":"154","line":52,"column":6,"nodeType":"155","endLine":52,"endColumn":8,"suggestions":"170","suppressions":"171"},{"ruleId":"153","severity":1,"message":"154","line":53,"column":6,"nodeType":"155","endLine":53,"endColumn":8,"suggestions":"172","suppressions":"173"},{"ruleId":"158","severity":1,"message":"174","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":17},{"ruleId":"158","severity":1,"message":"175","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":14},{"ruleId":"153","severity":1,"message":"176","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":8,"suggestions":"177","suppressions":"178"},{"ruleId":"153","severity":1,"message":"154","line":52,"column":6,"nodeType":"155","endLine":52,"endColumn":8,"suggestions":"179","suppressions":"180"},{"ruleId":"158","severity":1,"message":"174","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":17},{"ruleId":"153","severity":1,"message":"181","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":8,"suggestions":"182","suppressions":"183"},{"ruleId":"153","severity":1,"message":"154","line":51,"column":6,"nodeType":"155","endLine":51,"endColumn":8,"suggestions":"184","suppressions":"185"},{"ruleId":"153","severity":1,"message":"154","line":53,"column":6,"nodeType":"155","endLine":53,"endColumn":8,"suggestions":"186","suppressions":"187"},{"ruleId":"153","severity":1,"message":"188","line":19,"column":6,"nodeType":"155","endLine":19,"endColumn":8,"suggestions":"189"},{"ruleId":"153","severity":1,"message":"154","line":53,"column":6,"nodeType":"155","endLine":53,"endColumn":8,"suggestions":"190","suppressions":"191"},{"ruleId":"149","severity":1,"message":"150","line":27,"column":16,"nodeType":"151","messageId":"152","endLine":27,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":60,"column":6,"nodeType":"155","endLine":60,"endColumn":8,"suggestions":"192","suppressions":"193"},{"ruleId":"158","severity":1,"message":"159","line":11,"column":14,"nodeType":"160","messageId":"161","endLine":11,"endColumn":19},{"ruleId":"158","severity":1,"message":"175","line":12,"column":10,"nodeType":"160","messageId":"161","endLine":12,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":35,"column":16,"nodeType":"151","messageId":"152","endLine":35,"endColumn":18},{"ruleId":"153","severity":1,"message":"194","line":24,"column":6,"nodeType":"155","endLine":24,"endColumn":8,"suggestions":"195","suppressions":"196"},{"ruleId":"149","severity":1,"message":"150","line":30,"column":16,"nodeType":"151","messageId":"152","endLine":30,"endColumn":18},{"ruleId":"153","severity":1,"message":"197","line":65,"column":6,"nodeType":"155","endLine":65,"endColumn":8,"suggestions":"198","suppressions":"199"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cekId' and 'refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["200"],["201"],"no-unused-vars","'setId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getUsers' and 'refreshToken'. Either include them or remove the dependency array.",["202"],["203"],"React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.",["204"],["205"],["206"],["207"],["208"],["209"],["210"],["211"],"'DataTable' is defined but never used.","'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProduks' and 'refreshToken'. Either include them or remove the dependency array.",["212"],["213"],["214"],["215"],"React Hook useEffect has missing dependencies: 'getRoles' and 'refreshToken'. Either include them or remove the dependency array.",["216"],["217"],["218"],["219"],["220"],["221"],"React Hook useEffect has missing dependencies: 'getCustomer' and 'refreshToken'. Either include them or remove the dependency array.",["222"],["223"],["224"],["225"],["226"],"React Hook useEffect has missing dependencies: 'getTransaksi' and 'refreshToken'. Either include them or remove the dependency array.",["227"],["228"],"React Hook useEffect has missing dependencies: 'cekId', 'getNameCustomer', 'getProduk', and 'refreshToken'. Either include them or remove the dependency array.",["229"],["230"],{"desc":"231","fix":"232"},{"kind":"233","justification":"234"},{"desc":"235","fix":"236"},{"kind":"233","justification":"234"},{"desc":"237","fix":"238"},{"kind":"233","justification":"234"},{"desc":"231","fix":"239"},{"kind":"233","justification":"234"},{"desc":"231","fix":"240"},{"kind":"233","justification":"234"},{"desc":"231","fix":"241"},{"kind":"233","justification":"234"},{"desc":"242","fix":"243"},{"kind":"233","justification":"234"},{"desc":"231","fix":"244"},{"kind":"233","justification":"234"},{"desc":"245","fix":"246"},{"kind":"233","justification":"234"},{"desc":"231","fix":"247"},{"kind":"233","justification":"234"},{"desc":"231","fix":"248"},{"kind":"233","justification":"234"},{"desc":"249","fix":"250"},{"desc":"231","fix":"251"},{"kind":"233","justification":"234"},{"desc":"231","fix":"252"},{"kind":"233","justification":"234"},{"desc":"253","fix":"254"},{"kind":"233","justification":"234"},{"desc":"255","fix":"256"},{"kind":"233","justification":"234"},"Update the dependencies array to be: [cekId, refreshToken]",{"range":"257","text":"258"},"directive","","Update the dependencies array to be: [getUsers, refreshToken]",{"range":"259","text":"260"},"Update the dependencies array to be: [refreshToken]",{"range":"261","text":"262"},{"range":"263","text":"258"},{"range":"264","text":"258"},{"range":"265","text":"258"},"Update the dependencies array to be: [getProduks, refreshToken]",{"range":"266","text":"267"},{"range":"268","text":"258"},"Update the dependencies array to be: [getRoles, refreshToken]",{"range":"269","text":"270"},{"range":"271","text":"258"},{"range":"272","text":"258"},"Update the dependencies array to be: [getCustomer, refreshToken]",{"range":"273","text":"274"},{"range":"275","text":"258"},{"range":"276","text":"258"},"Update the dependencies array to be: [getTransaksi, refreshToken]",{"range":"277","text":"278"},"Update the dependencies array to be: [cekId, getNameCustomer, getProduk, refreshToken]",{"range":"279","text":"280"},[855,857],"[cekId, refreshToken]",[722,724],"[getUsers, refreshToken]",[1706,1708],"[refreshToken]",[1813,1815],[1605,1607],[1636,1638],[704,706],"[getProduks, refreshToken]",[1593,1595],[699,701],"[getRoles, refreshToken]",[1561,1563],[1639,1641],[553,555],"[getCustomer, refreshToken]",[1609,1611],[1860,1862],[799,801],"[getTransaksi, refreshToken]",[2023,2025],"[cekId, getNameCustomer, getProduk, refreshToken]"]